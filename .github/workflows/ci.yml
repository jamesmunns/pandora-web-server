name: CI

on:
  push:
    branches:
    - main
    - staging
    - ci
  pull_request: {}

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

jobs:
  check:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        toolchain: [stable, beta, "1.74"]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - name: Install toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy
    - name: Clippy
      run: cargo clippy --workspace --all-targets --all-features
    - name: Build
      run: cargo build --workspace --all-targets --all-features
    - name: Run unit tests
      run: cargo test --workspace --all-targets --all-features
    - name: Run doc tests
      run: cargo test --workspace --doc --all-features

  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        components: rustfmt
    - name: Formatting
      uses: actions-rust-lang/rustfmt@v1

  readme:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Check README.md files
      run: |
        for file in docs/*-module.md; do
          target=$(echo $file | sed -e 's!^docs/!!' -e 's!\.md!/README.md!')
          cp $file $target
        done

        status=0
        output="$(git diff --exit-code)" || status=$?
        if [ ! $status -eq 0 ]; then
          echo 'Detected out of sync README.md files:' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "$output" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi

        echo "$output"
        exit $status

  audit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Audit dependencies
      uses: actions-rust-lang/audit@v1
      with:
        denyWarnings: true
        # Several unmaintained dependencies in Pingora
        ignore: RUSTSEC-2021-0139,RUSTSEC-2024-0320,RUSTSEC-2021-0145

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
          toolchain: stable
    - name: Build docs
      run: cargo doc --workspace --all-features --no-deps
